@page "/"
@using RestSharp
@using Testes_do_WASM.Models
<PageTitle>Home</PageTitle>

<h1>Sistema de Gerenciamento</h1>

Testando o consumo de uma API externa.

<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Nome</th>
        <th></th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach(var item in items)
    {
        <tr>
            <td>@item.Id</td>
            <td>@item.Name</td>
            <td>
                <button class="btn btn-info" @onclick="()=>GetAsync(item.Id)">EDIT</button>
            </td>
            <td>
                <button class="btn btn-danger">DELETE</button>
            </td>
        </tr>
    }
    </tbody>
</table>

    <hr>
<input type="hidden" class="form-control" @bind="item.Id"/>
<div class="mb-3">
    <label class="form-label">Title</label>
    <input type="text" class="form-control" @bind="item.Name"/>
</div>
<button class="btn btn-primary" @onclick="UpsertAsync">
@if (item.Id is not 0)
    {
        <span>SAVE</span>
    }
    else
    {
        <span>CREATE</span>
    }
</button>
@code
{

    public  List<Item>? items = new();
    public Item? item = new();
    protected override async Task OnInitializedAsync()
    {

        var client = new RestClient();
        var request = new RestRequest($"{Configuration.ApiUrl}/ITEMS");
        items = await client.GetAsync<List<Item>>(request);
    }

    private async Task UpsertAsync()
    {
        var client = new RestClient();

        if (item?.Id == 0)
        {
            var request = new RestRequest($"{Configuration.ApiUrl}/items")
                .AddJsonBody(item);
            var createItem = await client.PostAsync<Item?>(request);
            if (createItem is not null)
            {
                items?.Add(createItem);
                item = new();
            }
        }
        else
        {
            var request = new RestRequest($"{Configuration.ApiUrl}/items/{item?.Id}")
                .AddJsonBody(item);
            await client.PutAsync<Item?>(request);
            var updateItem = items?.FirstOrDefault(x => x.Id == item?.Id);
            if (updateItem is not null)
                updateItem.Name = item.Name;
        }
    }

    public async Task GetAsync(int id)
    {
        var client = new RestClient();
        var request = new RestRequest($"{Configuration.ApiUrl}/ITEMS/{id}");
        item = await client.GetAsync<Item>(request);
    }
}
